// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamManagament.Data;

#nullable disable

namespace TeamManagament.Data.Migrations
{
    [DbContext(typeof(TeamManageContext))]
    [Migration("20240827141004_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TeamManagement.Domain.Entities.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 111,
                            TeamName = "A"
                        },
                        new
                        {
                            TeamId = 222,
                            TeamName = "B"
                        },
                        new
                        {
                            TeamId = 333,
                            TeamName = "C"
                        });
                });

            modelBuilder.Entity("TeamManagement.Domain.Entities.TeamMember", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("MemberId");

                    b.HasIndex("TeamId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            Name = "John"
                        },
                        new
                        {
                            MemberId = 2,
                            Name = "Smith"
                        },
                        new
                        {
                            MemberId = 3,
                            Name = "Grey"
                        },
                        new
                        {
                            MemberId = 4,
                            Name = "Alice"
                        },
                        new
                        {
                            MemberId = 5,
                            Name = "Bob"
                        },
                        new
                        {
                            MemberId = 6,
                            Name = "Carol"
                        },
                        new
                        {
                            MemberId = 7,
                            Name = "David"
                        },
                        new
                        {
                            MemberId = 8,
                            Name = "Eve"
                        },
                        new
                        {
                            MemberId = 9,
                            Name = "Frank"
                        },
                        new
                        {
                            MemberId = 10,
                            Name = "Grace"
                        });
                });

            modelBuilder.Entity("TeamManagement.Domain.Entities.TeamMember", b =>
                {
                    b.HasOne("TeamManagement.Domain.Entities.Team", "Team")
                        .WithMany("Members")
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("TeamManagement.Domain.Entities.Team", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
